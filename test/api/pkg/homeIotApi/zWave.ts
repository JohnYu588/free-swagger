// generated by free-swagger
// @ts-nocheck
/* eslint-disable */
import { ApiResponse, DeviceState, LightingSummary } from "./interface";
import http, { AxiosResponse } from "axios";

export const setDimmer = (
  params: { [key: string]: never },
  { deviceId, value } = {
    deviceId: string,
    value: number
  }
) =>
  http.request<ApiResponse, AxiosResponse<ApiResponse>>({
    url: `/lighting/dimmers/${deviceId}/${value}`,
    method: "post",
    params: {},
    data: params
  });

export const setDimmerTimer = (
  params: { [key: string]: never },
  { deviceId, value, timeunit } = {
    deviceId: string,
    value: number,
    timeunit: number
  }
) =>
  http.request<ApiResponse, AxiosResponse<ApiResponse>>({
    url: `/lighting/dimmers/${deviceId}/${value}/timer/${timeunit}`,
    method: "post",
    params: {},
    data: params
  });

export const getSwitchState = (
  params: { [key: string]: never },
  { deviceId } = {
    deviceId: string
  }
) =>
  http.request<DeviceState, AxiosResponse<DeviceState>>({
    url: `/lighting/switches/${deviceId}`,
    method: "get",
    params: params,
    data: {}
  });

export const setSwitch = (
  params: { [key: string]: never },
  { deviceId, value } = {
    deviceId: string,
    value: string
  }
) =>
  http.request<ApiResponse, AxiosResponse<ApiResponse>>({
    url: `/lighting/switches/${deviceId}/${value}`,
    method: "post",
    params: {},
    data: params
  });

export const setSwitchTimer = (
  params: { [key: string]: never },
  { deviceId, value, minutes } = {
    deviceId: string,
    value: string,
    minutes: number
  }
) =>
  http.request<ApiResponse, AxiosResponse<ApiResponse>>({
    url: `/lighting/switches/${deviceId}/${value}/timer/${minutes}`,
    method: "post",
    params: {},
    data: params
  });

export const getLightingSummary = () =>
  http.request<LightingSummary, AxiosResponse<LightingSummary>>({
    url: `/lightingSummary`,
    method: "get",
    params: params,
    data: {}
  });
