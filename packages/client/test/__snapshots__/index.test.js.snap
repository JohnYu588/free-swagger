// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`freeSwaggerClient code fragment 1`] = `
"// Find pet by ID
export const getPetById = (params, { petId }) =>
  axios.request({
    url: \`/v2/pet/\${petId}\`,
    method: \\"get\\",
    params: {},
    data: {}
  });
"
`;

exports[`freeSwaggerClient code fragment2 1`] = `
"// Add a new pet to the store
export const addPet = (params) =>
  axios.request({
    url: \`/v2/pet\`,
    method: \\"post\\",
    params: {},
    data: params
  });
"
`;

exports[`freeSwaggerClient generate full ts interface 1`] = `
"// @ts-nocheck
/* eslint-disable */
// generated by free-swagger-client

export type JavaMap<T, U> = Record<string, U>;

export type JavaList<T> = Array<T>;
export interface Category {
  id?: number;
  name?: string;
}
export interface Pet {
  id?: number;
  category?: Category;
  name: string;
  photoUrls: string[];
  tags?: Tag[];
  status?: \\"available\\" | \\"pending\\" | \\"sold\\"; // pet status in the store
}
export interface Tag {
  id?: number;
  name?: string;
}
export interface ApiResponse {
  code?: number;
  type?: string;
  message?: string;
}
export interface Order {
  id?: number;
  petId?: number;
  quantity?: number;
  shipDate?: string;
  status?: \\"placed\\" | \\"approved\\" | \\"delivered\\"; // Order Status
  complete?: boolean;
}
export interface User {
  id?: number;
  username?: string;
  firstName?: string;
  lastName?: string;
  email?: string;
  password?: string;
  phone?: string;
  userStatus?: number; // User Status
}
"
`;

exports[`freeSwaggerClient generate full ts interface with generic 1`] = `
"// @ts-nocheck
/* eslint-disable */
// generated by free-swagger-client

export type JavaMap<T, U> = Record<string, U>;

export type JavaList<T> = Array<T>;
export interface PageInfo<T> {
  list?: T[];
  pageNum?: number;
  pageSize?: number;
  pages?: number;
  total?: number;
}
export interface Qwe {
  aaa?: string; // aaa注释
  bbb?: string; // bbb注释
}
"
`;

exports[`freeSwaggerClient generate full ts interface with special generic 1`] = `
"// @ts-nocheck
/* eslint-disable */
// generated by free-swagger-client

export type JavaMap<T, U> = Record<string, U>;

export type JavaList<T> = Array<T>;
export interface PagedResultDto<T> {
  items?: T[];
  totalCount?: number;
}
export interface JsonResult<T> {
  result?: boolean; // 结果
  code?:
    | \\"Success\\"
    | \\"Timeout\\"
    | \\"Fail\\"
    | \\"Expired\\"
    | \\"Error\\"
    | \\"InternalServerError\\"
    | \\"InvalidAnonymousAccess\\"
    | \\"UserSessionExpired\\"
    | \\"UserIsBinded\\"; // 代码
  data?: string; // 数据
  message?: string; // 消息
}
export interface Product {
  product_id?: string; // Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles.
  description?: string; // Description of product.
  display_name?: string; // Display name of product.
  capacity?: string; // Capacity of product. For example, 4 people.
  image?: string; // Image URL representing the product.
}
export interface PriceEstimate {
  product_id?: string; // Unique identifier representing a specific product for a given latitude & longitude. For example, uberX in San Francisco will have a different product_id than uberX in Los Angeles
  currency_code?: string; // [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217) currency code.
  display_name?: string; // Display name of product.
  estimate?: string; // Formatted string of estimate in local currency of the start location. Estimate could be a range, a single number (flat rate) or \\"Metered\\" for TAXI.
  low_estimate?: number; // Lower bound of the estimated price.
  high_estimate?: number; // Upper bound of the estimated price.
  surge_multiplier?: number; // Expected surge multiplier. Surge is active if surge_multiplier is greater than 1. Price estimate already factors in the surge multiplier.
}
export interface Profile {
  first_name?: string; // First name of the Uber user.
  last_name?: string; // Last name of the Uber user.
  email?: string; // Email address of the Uber user
  picture?: string; // Image URL of the Uber user.
  promo_code?: string; // Promo code of the Uber user.
  role?: RoleType;
}
export interface Activity {
  uuid?: string; // Unique identifier for the activity
}
export interface Activities {
  offset?: number; // Position in pagination.
  limit?: number; // Number of items to retrieve (100 max).
  count?: number; // Total number of items available.
  history?: Activity[];
}
export interface CreateOrUpdateUserInput {
  userId?: number; // 用户ID(ID来自User表)
  userRights?:
    | \\"View\\"
    | \\"Operate\\"
    | \\"Auth\\"
    | \\"Search\\"
    | \\"Delete\\"
    | \\"UserManage\\"
    | \\"UserConfig\\"
    | \\"SetTime\\"
    | \\"SetNetwork\\"
    | \\"SetSms\\"
    | \\"SystemManage\\"[]; // 用户权限
}
export interface Abc {
  id?: string;
  isLow?: boolean;
}
export interface NumberArrayEnumModel {
  foo?: \\"0\\" | \\"1\\" | \\"2\\" | \\"4\\" | \\"8\\"[];
  bar?: \\"0\\" | \\"1\\" | \\"2\\" | \\"3\\"[];
}
export interface Error {
  code?: number;
  message?: string;
  fields?: string;
}
export interface AuditLogListDto {
  userId?: number;
  id?: number;
}
"
`;

exports[`freeSwaggerClient generate ts interface snippet 1`] = `
"export interface Category {
  id?: number;
  name?: string;
}
"
`;

exports[`freeSwaggerClient generate ts interface snippet width generic 1`] = `""`;

exports[`freeSwaggerClient ts code fragment with generic 1`] = `
"// companies
export const getCompanies = (params: { pageNum?: number; pageSize?: number }) =>
  axios.request<PageInfo<JavaList<Qwe>>, AxiosResponse<PageInfo<JavaList<Qwe>>>>({
    url: \`/base/companies\`,
    method: \\"get\\",
    params: params,
    data: {}
  });
"
`;

exports[`freeSwaggerClient ts code fragment with get method 1`] = `
"// Find pet by ID
export const getPetById = (
  params: { [key: string]: never },
  { petId } = {
    petId: number
  }
) =>
  axios.request<Pet, AxiosResponse<Pet>>({
    url: \`/v2/pet/\${petId}\`,
    method: \\"get\\",
    params: {},
    data: {}
  });
"
`;

exports[`freeSwaggerClient ts code fragment with post method 1`] = `
"// uploads an image
export const uploadFile = (
  params: FormData,
  { petId } = {
    petId: number
  }
) =>
  axios.request<ApiResponse, AxiosResponse<ApiResponse>>({
    url: \`/v2/pet/\${petId}/uploadImage\`,
    method: \\"post\\",
    params: {},
    data: params
  });
"
`;

exports[`freeSwaggerClient ts code fragment with special generic 1`] = `
"// 新增或编辑标准票, 需走审批流程
export const AddOrUpdateTicketTypical = () =>
  axios.request<JsonResult<Guid>, AxiosResponse<JsonResult<Guid>>>({
    url: \`/v1/api/services/app/YmTicketTypical/AddOrUpdateTicketTypical\`,
    method: \\"post\\",
    params: {},
    data: {}
  });
"
`;
