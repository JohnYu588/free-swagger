// generated by free-swagger
// @ts-nocheck
/* eslint-disable */
import {
  Result,
  PageableResponse,
  JavaList,
  DynamicEnumMetadata,
  DynamicEnumModel,
  object,
  DynamicEnumDetail,
  DynamicEnumOptionMetadata,
  DynamicEnumOptionModel,
  DynamicFieldModel,
  DynamicFormModel,
  JavaMap,
  DynamicDataModel,
  DynamicModuleMetadata,
  DynamicModuleModel,
  DynamicFieldMetadata
} from "./interface";
import axios, { AxiosResponse } from "axios";

// 搜索枚举列表
export const searchEnumUsingGET = (params: {
  isBusiness?: boolean;
  isSystem?: boolean;
  keyword?: string;
  pageNum?: number;
  pageSize?: number;
}) =>
  axios.request<
    Result<PageableResponse<JavaList<DynamicEnumMetadata>>>,
    AxiosResponse<Result<PageableResponse<JavaList<DynamicEnumMetadata>>>>
  >({
    url: `/v1/dynamic/config/enums`,
    method: "get",
    params: params,
    data: {}
  });

// 新增枚举
export const newEnumUsingPOST = (params: DynamicEnumModel) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/enums`,
    method: "post",
    params: {},
    data: params
  });

// 查询单个枚举详情
export const getEnumUsingGET = (
  params: {
    containsInactive: boolean;
  },
  { enumUnionId } = {
    enumUnionId: string
  }
) =>
  axios.request<Result<DynamicEnumDetail>, AxiosResponse<Result<DynamicEnumDetail>>>({
    url: `/v1/dynamic/config/enums/${enumUnionId}`,
    method: "get",
    params: params,
    data: {}
  });

// 搜索枚举列表子选项
export const searchEnumOptionUsingGET = (
  params: {
    containsInactive: boolean;
    keyword?: string;
    pageNum?: number;
    pageSize?: number;
  },
  { enumUnionId } = {
    enumUnionId: string
  }
) =>
  axios.request<
    Result<PageableResponse<JavaList<DynamicEnumOptionMetadata>>>,
    AxiosResponse<Result<PageableResponse<JavaList<DynamicEnumOptionMetadata>>>>
  >({
    url: `/v1/dynamic/config/enums/${enumUnionId}/options`,
    method: "get",
    params: params,
    data: {}
  });

// 新增枚举子选项
export const newEnumOptionUsingPOST = (
  params: DynamicEnumOptionModel,
  { enumUnionId } = {
    enumUnionId: string
  }
) =>
  axios.request<Result<Void>, AxiosResponse<Result<Void>>>({
    url: `/v1/dynamic/config/enums/${enumUnionId}/options`,
    method: "post",
    params: {},
    data: params
  });

// 修改枚举子选项
export const editEnumOptionUsingPUT = (
  params: DynamicEnumOptionModel,
  { enumUnionId, unionId } = {
    enumUnionId: string,
    unionId: string
  }
) =>
  axios.request<Result<Void>, AxiosResponse<Result<Void>>>({
    url: `/v1/dynamic/config/enums/${enumUnionId}/options/${unionId}`,
    method: "put",
    params: {},
    data: params
  });

// 修改枚举
export const editEnumUsingPUT = (
  params: DynamicEnumModel,
  { unionId } = {
    unionId: string
  }
) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/enums/${unionId}`,
    method: "put",
    params: {},
    data: params
  });

// 新增字段
export const newFieldUsingPOST = (params: DynamicFieldModel) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/fields`,
    method: "post",
    params: {},
    data: params
  });

// 新增字段
export const copyFieldUsingPOST = (
  params: { [key: string]: never },
  { originUnionId } = {
    originUnionId: string
  }
) =>
  axios.request<Result, AxiosResponse<Result>>({
    url: `/v1/dynamic/config/fields/${originUnionId}`,
    method: "post",
    params: {},
    data: {}
  });

// 修改字段
export const editFieldUsingPUT = (
  params: DynamicFieldModel,
  { unionId } = {
    unionId: string
  }
) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/fields/${unionId}`,
    method: "put",
    params: {},
    data: params
  });

// 新增表单
export const newFormUsingPOST = (params: DynamicFormModel) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/forms`,
    method: "post",
    params: {},
    data: params
  });

// 根据业务编码和精准业务参数搜索表单数据
export const searchBizFormDataUsingGET = (params: {
  formCode?: string;
  moduleCode?: string;
  pageNum?: number;
  pageSize?: number;
  params?: string;
}) =>
  axios.request<
    Result<PageableResponse<JavaList<JavaMap<string, string>>>>,
    AxiosResponse<Result<PageableResponse<JavaList<JavaMap<string, string>>>>>
  >({
    url: `/v1/dynamic/config/forms/data`,
    method: "get",
    params: params,
    data: {}
  });

// 搜索表单数据
export const searchDataUsingGET = (
  params: {
    key1?: string;
    key10?: string;
    key11?: string;
    key12?: string;
    key13?: string;
    key14?: string;
    key15?: string;
    key16?: string;
    key17?: string;
    key18?: string;
    key19?: string;
    key2?: string;
    key20?: string;
    key21?: string;
    key22?: string;
    key23?: string;
    key24?: string;
    key25?: string;
    key26?: string;
    key27?: string;
    key28?: string;
    key29?: string;
    key3?: string;
    key30?: string;
    key31?: string;
    key32?: string;
    key33?: string;
    key34?: string;
    key35?: string;
    key36?: string;
    key37?: string;
    key38?: string;
    key39?: string;
    key4?: string;
    key40?: string;
    key5?: string;
    key6?: string;
    key7?: string;
    key8?: string;
    key9?: string;
    pageNum?: number;
    pageSize?: number;
  },
  { formUnionId } = {
    formUnionId: string
  }
) =>
  axios.request<
    Result<PageableResponse<JavaList<JavaMap<string, object>>>>,
    AxiosResponse<Result<PageableResponse<JavaList<JavaMap<string, object>>>>>
  >({
    url: `/v1/dynamic/config/forms/${formUnionId}/data`,
    method: "get",
    params: params,
    data: {}
  });

// 新增表单数据
export const newDataUsingPOST = (
  params: DynamicDataModel,
  { formUnionId } = {
    formUnionId: string
  }
) =>
  axios.request<Result<Void>, AxiosResponse<Result<Void>>>({
    url: `/v1/dynamic/config/forms/${formUnionId}/data`,
    method: "post",
    params: {},
    data: params
  });

// 修改表单数据
export const editDataUsingPUT = (
  params: DynamicDataModel,
  { dataId, formUnionId } = {
    dataId: number,
    formUnionId: string
  }
) =>
  axios.request<Result<Void>, AxiosResponse<Result<Void>>>({
    url: `/v1/dynamic/config/forms/${formUnionId}/data/${dataId}`,
    method: "put",
    params: {},
    data: params
  });

// 删除表单数据
export const deleteDataUsingDELETE = (
  params: { [key: string]: never },
  { dataId, formUnionId } = {
    dataId: number,
    formUnionId: string
  }
) =>
  axios.request<Result<Void>, AxiosResponse<Result<Void>>>({
    url: `/v1/dynamic/config/forms/${formUnionId}/data/${dataId}`,
    method: "delete",
    params: {},
    data: {}
  });

// 复制表单
export const copyFormUsingPOST = (
  params: { [key: string]: never },
  { originUnionId } = {
    originUnionId: string
  }
) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/forms/${originUnionId}`,
    method: "post",
    params: {},
    data: {}
  });

// 修改表单
export const editFormUsingPUT = (
  params: DynamicFormModel,
  { unionId } = {
    unionId: string
  }
) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/forms/${unionId}`,
    method: "put",
    params: {},
    data: params
  });

// 搜索模块列表
export const searchModuleUsingGET = (params: {
  keyword?: string;
  moduleCode?: string;
  pageNum?: number;
  pageSize?: number;
}) =>
  axios.request<
    Result<PageableResponse<JavaList<DynamicModuleMetadata>>>,
    AxiosResponse<Result<PageableResponse<JavaList<DynamicModuleMetadata>>>>
  >({
    url: `/v1/dynamic/config/modules`,
    method: "get",
    params: params,
    data: {}
  });

// 新增模块
export const newModuleUsingPOST = (params: DynamicModuleModel) =>
  axios.request<Result<Void>, AxiosResponse<Result<Void>>>({
    url: `/v1/dynamic/config/modules`,
    method: "post",
    params: {},
    data: params
  });

// 根据模块编码搜索表单列表
export const searchFormByModuleCodeUsingGET = (params: {
  formCode?: string;
  formType?: string;
  isActive?: boolean;
  isSystem?: boolean;
  keyword?: string;
  level?: string;
  moduleCode: string;
  pageNum?: number;
  pageSize?: number;
}) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/modules/forms`,
    method: "get",
    params: params,
    data: {}
  });

// 搜索字段列表
export const searchFieldByCodeUsingGET = (params: {
  fieldCode?: string;
  fieldTypes?: string;
  formCode?: string;
  isActive?: boolean;
  isAssigned?: boolean;
  keyword?: string;
  moduleCode?: string;
  pageNum?: number;
  pageSize?: number;
  properties?: string;
  scopes?: string;
}) =>
  axios.request<
    Result<PageableResponse<JavaList<DynamicFieldMetadata>>>,
    AxiosResponse<Result<PageableResponse<JavaList<DynamicFieldMetadata>>>>
  >({
    url: `/v1/dynamic/config/modules/forms/fields`,
    method: "get",
    params: params,
    data: {}
  });

// 根据模块ID搜索表单列表
export const searchFormByModuleIdUsingGET = (
  params: {
    formCode?: string;
    formType?: string;
    isActive?: boolean;
    isSystem?: boolean;
    keyword?: string;
    level?: string;
    pageNum?: number;
    pageSize?: number;
  },
  { moduleUnionId } = {
    moduleUnionId: string
  }
) =>
  axios.request<Result<object>, AxiosResponse<Result<object>>>({
    url: `/v1/dynamic/config/modules/${moduleUnionId}/forms`,
    method: "get",
    params: params,
    data: {}
  });

// 搜索字段列表
export const searchFieldUsingGET = (
  params: {
    fieldCode?: string;
    fieldTypes?: string;
    isActive?: boolean;
    isAssigned?: boolean;
    keyword?: string;
    pageNum?: number;
    pageSize?: number;
    properties?: string;
    scopes?: string;
  },
  { formUnionId, moduleUnionId } = {
    formUnionId: string,
    moduleUnionId: string
  }
) =>
  axios.request<
    Result<PageableResponse<JavaList<DynamicFieldMetadata>>>,
    AxiosResponse<Result<PageableResponse<JavaList<DynamicFieldMetadata>>>>
  >({
    url: `/v1/dynamic/config/modules/${moduleUnionId}/forms/${formUnionId}/fields`,
    method: "get",
    params: params,
    data: {}
  });

// 修改模块
export const editModuleUsingPUT = (
  params: DynamicModuleModel,
  { unionId } = {
    unionId: string
  }
) =>
  axios.request<Result<Void>, AxiosResponse<Result<Void>>>({
    url: `/v1/dynamic/config/modules/${unionId}`,
    method: "put",
    params: {},
    data: params
  });
