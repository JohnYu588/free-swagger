/* eslint-disable */
// @ts-nocheck

/**
 * generated by free-swagger
 * @see https://www.npmjs.com/package/free-swagger
 * @title home-iot-api
 * @description The API for the EatBacon IOT project
 * @version 1.0.0
 * @date 2016-12-22 07:36
 **/

export interface LightingSummary {
  zones?: LightingZone[];
  zoneStatus?: LightingZoneStatus[];
}

export interface LightingZone {
  id?: string;
  name?: string;
  deviceId?: number;
  deviceType?: "dimmer" | "switch";
  zone?: string;
}

export interface LightingZoneStatus {
  id?: string;
  name?: string;
  lastUpdate?: string;
  level?: number;
}

export interface TemperatureSummary {
  zones?: TemperatureZone[];
  zoneStatus?: TemperatueZoneStatus[];
}

export interface TemperatureZone {
  /** the unique identifier for the zone */
  id: number;
  name: string;
  inputPosition?: number;
  outputPosition?: number;
  zone?: string;
}

export interface TemperatueZoneStatus {
  /** the unique identifier for the zone */
  id: string;
  /** the name of the zone */
  name?: string;
  /** the temperature in the zone */
  value: number;
  /** the temperature units */
  units?: "celsius" | "fahrenheit";
  /** the timestamp when the temperature was measured */
  timestamp: string;
}

export interface ApiResponse {
  code?: number;
  message?: string;
}

export interface HeaterState {
  id?: string;
  state?: string;
}

export interface DeviceState {
  id?: string;
  name?: string;
  lastUpdate?: string;
  level?: number;
}

export interface ForecastResponse {
  city?: City;
  values?: Forecast[];
}

export interface Forecast {
  date?: string;
  pressure?: number;
  humidity?: number;
  windSpeed?: number;
  clouds?: number;
  temperature?: ForecastTemperature;
  weather?: WeatherForecast;
}

export interface City {
  id?: number;
  name?: string;
  lat?: number;
  lon?: number;
  country?: string;
}

export interface ForecastTemperature {
  low?: number;
  high?: number;
  morning?: number;
  day?: number;
  evening?: number;
  night?: number;
}

export interface WeatherForecast {
  summary?: string;
  description?: string;
  icon?: string;
}

export interface DeviceRegistrationInfo {
  uri?: string;
  id?: string;
}